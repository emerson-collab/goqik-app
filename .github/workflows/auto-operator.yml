name: auto-operator (self-heal & redeploy)

on:
  schedule:
    - cron: "*/10 * * * *"   # 每10分钟自检一次
  workflow_dispatch:        # 也支持手动触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_NAME: goqik-app
      DOMAIN: goqik.ai
      DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/goqik-app:latest
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE }}

      - name: SSH deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_SSH_PORT }}
          script_stop: true
          script: |
            set -euo pipefail
            APP=${APP_NAME}
            echo "[deploy] pull image"
            docker pull "${DOCKER_IMAGE}"
            echo "[deploy] stop/remove old"
            docker stop ${APP} 2>/dev/null || true
            docker rm   ${APP} 2>/dev/null || true
            echo "[deploy] run new"
            docker run -d --restart=always --name ${APP} \
              -e DATABASE_URL="${DATABASE_URL}" \
              -p 8080:8080 "${DOCKER_IMAGE}"
            echo "[health] wait app..."
            sleep 8
            echo "[health] local 8080"
            if ! curl -fsS --max-time 8 http://127.0.0.1:8080/ >/dev/null ; then
              echo "local 8080 failed"; docker logs --tail 200 ${APP} || true; exit 1
            fi
            echo "[health] public https://${DOMAIN}"
            if ! curl -fsS --max-time 15 "https://${DOMAIN}/" >/dev/null ; then
              echo "public check failed (maybe cert/nginx/app cold start)"; docker logs --tail 200 ${APP} || true
            fi
            echo "[status]"; docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

      - name: Mark success
        if: ${{ success() }}
        run: echo "✅ auto-operator done"
